.. _common-dg-auth:


Authentication
~~~~~~~~~~~~~~

Every ReST request against a Rackspace Cloud service requires the inclusion of a specific authorization token, supplied by the `X-Auth-Token` HTTP header. Customers obtain this token by first using the Rackspace Cloud Identity service and supplying valid authentication credentials.

.. _common-dg-auth-endpoint:

Authentication endpoint
^^^^^^^^^^^^^^^^^^^^^^^

The Rackspace Cloud Authentication Service serves as the entry point to all Rackspace Cloud APIs and is itself a ReSTful web service.

Use the following endpoint to access the Cloud Identity service:

``https://identity.api.rackspacecloud.com/v2.0/``

Note that the v2.0 component in the URL indicates that you are using version 2.0 of the Cloud Authentication API.

.. _common-dg-auth-token:

Authenticating by using token-based authentication
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Before you can make Rackspace Cloud API requests, you must
first generate an authentication token. You provide this
token in the ``X-Auth-Token`` header in each Rackspace Cloud API request.

The examples below demonstrate how to use cURL to obtain the
authentication token and your account number. You must provide both when
making subsequent API requests.

Remember to replace the placeholder names in the following
authentication request examples with your information:

-  *yourUserName* — Your common Rackspace Cloud username, as supplied
   during registration.

-  *yourApiKey* — Your API access key.

   You can obtain the key from the Rackspace `Cloud Control Panel`_ by selecting
   **Account Settings** from the *yourAccount* menu in the top-right
   corner of the window.

In the following examples, you submit the request against the Rackspace Cloud Identity
service endpoint. If the request is successful, the authentication response returns the authentication token, service catalog, and user information as shown in the example :ref:`authentication response <common-dg-auth-response>`. You can use this information to :ref:`submit an API request <common-dg-auth-submit-api-request>`.

.. _common-dg-auth-request:

**Example: Authentication request, JSON**

.. code::  

    curl -s https://identity.api.rackspacecloud.com/v2.0/tokens -X 'POST' \
         -d '{"auth":{"RAX-KSKEY:apiKeyCredentials":{"username":"yourUserName",
            "apiKey":"yourApiKey"}}}' \ 
         -H "Content-Type:
            application/json" 

**Example: Authentication request, XML**

.. code::

    POST /v2.0/tokens HTTP/1.1
    User-Agent: curl/7.21.0 (x86_64-pc-linux-gnu) libcurl/7.21.0 OpenSSL/0.9.8o zlib/1.2.3.4 libidn/1.15 libssh2/1.2.6
    Host: identity.api.rackspacecloud.com
    Accept: application/xml
    Content-Type: application/xml
    Content-Length: 88

    <?xml version="1.0" encoding="UTF-8"?>
    <auth>   
       <apiKeyCredentials     
           xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"     
           username="jsmith" **<1>**
           apiKey="aaaaa-bbbbb-ccccc-12345678"/> **<2>**
    </auth>

.. _common-dg-auth-response:

**Example: Authentication response, JSON**

.. code::

    {
        "access": {
            "serviceCatalog": [
                {
                    "endpoints": [
                        {
                            "internalURL": "https://snet-storage101.dfw1.clouddrive.com/v1/MossoCloudFS_530f8649-324c-499c-a075-2195854d52a7", 
                            "publicURL": "https://storage101.dfw1.clouddrive.com/v1/MossoCloudFS_530f8649-324c-499c-a075-2195854d52a7", 
                            "region": "DFW", 
                            "tenantId": "MossoCloudFS_530f8649-324c-499c-a075-2195854d52a7"
                        }, 
                        {
                            "internalURL": "https://snet-storage101.ord1.clouddrive.com/v1/MossoCloudFS_530f8649-324c-499c-a075-2195854d52a7", 
                            "publicURL": "https://storage101.ord1.clouddrive.com/v1/MossoCloudFS_530f8649-324c-499c-a075-2195854d52a7", 
                            "region": "ORD", 
                            "tenantId": "MossoCloudFS_530f8649-324c-499c-a075-2195854d52a7"
                        }
                    ], 
                    "name": "cloudFiles", 
                    "type": "object-store"
                }, 
                {
                    "endpoints": [
                        {
                            "publicURL": "https://servers.api.rackspacecloud.com/v1.0/010101", 
                            "tenantId": "010101", 
                            "versionId": "1.0", 
                            "versionInfo": "https://servers.api.rackspacecloud.com/v1.0", 
                            "versionList": "https://servers.api.rackspacecloud.com/"
                        }
                    ], 
                    "name": "cloudServers", 
                    "type": "compute"
                }, 
                {
                    "endpoints": [ 
                        {
                            "publicURL": "https://dfw.servers.api.rackspacecloud.com/v2/010101", 
                            "region": "DFW", 
                            "tenantId": "010101", 
                            "versionId": "2", 
                            "versionInfo": "https://dfw.servers.api.rackspacecloud.com/v2", 
                            "versionList": "https://dfw.servers.api.rackspacecloud.com/"
                        }, 
                        {
                            "publicURL": "https://ord.servers.api.rackspacecloud.com/v2/010101", 
                            "region": "ORD", 
                            "tenantId": "010101", 
                            "versionId": "2", 
                            "versionInfo": "https://ord.servers.api.rackspacecloud.com/v2", 
                            "versionList": "https://ord.servers.api.rackspacecloud.com/"
                        }
                    ], 
                    "name": "cloudServersOpenStack", 
                    "type": "compute"
                }
            ], 
            "token": {
                "expires": "2012-09-14T15:11:57.585-05:00", 
                "id": "858fb4c2-bf15-4dac-917d-8ec750ae9baa", 
                "tenant": {
                    "id": "010101", 
                    "name": "010101"
                }
            }, 
            "user": {
                "RAX-AUTH:defaultRegion": "DFW", 
                "id": "170454", 
                "name": "MyRackspaceAcct", 
                "roles": [
                    {
                        "description": "User Admin Role.", 
                        "id": "3", 
                        "name": "identity:user-admin"
                    }
                ]
            }
        }
    }

**Example: Authentication response, XML**

.. code::

    HTTP/1.1 200 OK
    Content-Type: application/xml; charset=UTF-8
    Content-Length: 477
    Date: Thu, 12 Apr 2012 18:50:20 GMT

    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
    <access xmlns:os-ksadm="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"
      xmlns="http://docs.openstack.org/identity/api/v2.0"
      xmlns:rax-kskey="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"
      xmlns:rax-ksqa="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
      xmlns:common="http://docs.openstack.org/common/api/v1.0"
      xmlns:ksgrp="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0"
      xmlns:rax-kscatalog="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0"
      xmlns:atom="http://www.w3.org/2005/Atom">
      <token id="vvvvvvvv-wwww-xxxx-yyyy-zzzzzzzzzzzz" expires="2011-12-08T22:51:02.000-06:00"/>
      <user id="123456" name="jsmith" rax-auth:defaultRegion="DFW">
        <roles>
          <role id="identity:admin" name="identity:admin" description="Admin Role."/>
          <role id="identity:default" name="identity:default" description="Default Role."/>
        </roles>
      </user>
      <serviceCatalog>
        <service type="rax:database" name="cloudDatabases">
          <endpoint region="DFW" tenantId="1100111" publicURL="https://dfw.databases.api.rackspacecloud.com/v1.0/1100111"/>
          <endpoint region="ORD" tenantId="1100111" publicURL="https://ord.databases.api.rackspacecloud.com/v1.0/1100111"/>
        </service>
        <service type="rax:load-balancer" name="cloudLoadBalancers">
          <endpoint region="DFW" tenantId="1100111" publicURL="https://dfw.loadbalancers.api.rackspacecloud.com/v1.0/1100111"/>
          <endpoint region="ORD" tenantId="1100111" publicURL="https://ord.loadbalancers.api.rackspacecloud.com/v1.0/1100111"/>
        </service>
        <service type="compute" name="cloudServersOpenStack">
          <endpoint region="DFW" tenantId="1100111"
            publicURL="https://dfw.servers.api.rackspacecloud.com/v2/1100111">
            <version id="2" info="https://dfw.servers.api.rackspacecloud.com/v2/"
              list="https://dfw.servers.api.rackspacecloud.com/" />
          </endpoint>
          <endpoint region="ORD" tenantId="1100111"
            publicURL="https://ord.servers.api.rackspacecloud.com/v2/1100111">
            <version id="2" info="https://ord.servers.api.rackspacecloud.com/v2/"
              list="https://ord.servers.api.rackspacecloud.com/" />
          </endpoint>
        </service>
        <service type="compute" name="cloudServers">
          <endpoint tenantId="1100111"
            publicURL="https://servers.api.rackspacecloud.com/v1.0/1100111">
            <version id="1.0"
              info="https://servers.api.rackspacecloud.com/v1.0/"
              list="https://servers.api.rackspacecloud.com/"/>
          </endpoint>
        </service>
        <service type="object-store" name="cloudFiles">
          <endpoint region="DFW"
            tenantId="MossoCloudFS_aaaaaaaa-bbbb-cccc-dddd-eeeeeeee"
            publicURL="https://storage101.dfw1.clouddrive.com/v1/MossoCloudFS_aaaaaaaa-bbbb-cccc-dddd-eeeeeeee"
            internalURL="https://snet-storage101.dfw1.clouddrive.com/v1/MossoCloudFS_aaaaaaaa-bbbb-cccc-dddd-eeeeeeee"/>
          <endpoint region="ORD"
            tenantId="MossoCloudFS_aaaaaaaa-bbbb-cccc-dddd-eeeeeeee"
            publicURL="https://storage101.ord1.clouddrive.com/v1/MossoCloudFS_aaaaaaaa-bbbb-cccc-dddd-eeeeeeee"
            internalURL="https://snet-storage101.ord1.clouddrive.com/v1/MossoCloudFS_aaaaaaaa-bbbb-cccc-dddd-eeeeeeee"/>
        </service>
        <service type="rax:object-cdn" name="cloudFilesCDN">
          <endpoint region="DFW"
            tenantId="MossoCloudFS_aaaaaaaa-bbbb-cccc-dddd-eeeeeeee"
            publicURL="https://cdn1.clouddrive.com/v1/MossoCloudFS_aaaaaaaa-bbbb-cccc-dddd-eeeeeeee"/> 
          <endpoint region="ORD"
            tenantId="MossoCloudFS_aaaaaaaa-bbbb-cccc-dddd-eeeeeeee"
            publicURL="https://cdn2.clouddrive.com/v1/MossoCloudFS_aaaaaaaa-bbbb-cccc-dddd-eeeeeeee"/>    
        </service>
        <service type="rax:dns" name="cloudDNS">
          <endpoint tenantId="1100111"
            publicURL="https://dns.api.rackspacecloud.com/v1.0/1100111"/>
        </service>
      </serviceCatalog>
    </access>

.. note::
    For detailed information about the authentication request and response, see  
    `authentication request and response`_ in the *Cloud Identity Developer Guide*.

.. _Cloud Control Panel: http://mycloud.rackspace.com/
.. _authentication request and response: http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/Sample_Request_Response-d1e64.html

.. _common-dg-auth-submit-api-request:

Submit API request
^^^^^^^^^^^^^^^^^^

After you authenticate successfully, you can submit
an API request for any service included in the service catalog.

#. In the authentication response, copy the token ``id`` value from the
   token object and save it, or export it to an environment variable
   that can be supplied in the ``X-Auth-Token`` header required in each
   API request. In this example, the token value is
   ``123abc5368901230076b12357897898``.

   .. code::

       "token": 
             {
               "RAX-AUTH:authenticatedBy": [
                   "APIKEY"
                       ],
               "expires": "2015-01-09T15:08:53.645-06:00",
               "id": "123abc5368901230076b12357897898"
             }

#. Find the endpoint URL for the service that you want to access.

   For example, the endpoint URL for Cloud Files is
   ``https://storage101.ord1.clouddrive.com/v1/yourTenantID``.

#. Submit an API request to the service endpoint that you identified.

   The following example shows a cURL request to retrieve a list of
   containers for a tenant by using the Cloud Files API.

   .. code::  

       $ cURL -i -s \
       -X GET https://storage101.ord1.clouddrive.com/v1/MossoCloudFS_9c24e3db-52bf-4f26-8dc1-220871796e9f \
       -H "X-Auth-Token: $AUTH_TOKEN" \
       -H "Content-type: application/json"  --verbose | python -m json.tool

   If the authentication token is accepted, the Cloud Files service
   returns the following response if the authentication token is
   accepted.

   .. code:: 
                       
        GET /v1/MossoCloudFS_9c24e3db-52bf-4f26-8dc1-220871796e9f HTTP/1.1
        User-Agent: curl/7.30.0
        Host: storage101.ord1.clouddrive.com
        Accept: */*
        X-Auth-Token: 69dc089d983f4729af29bec5a7dc6426
        Content-type: application/json
        
         HTTP/1.1 200 OK 
         Content-Length: 22
         X-Account-Object-Count: 0
         X-Account-Storage-Policy-Policy-0-Bytes-Used: 0
         X-Timestamp: 1345588196.72805
         X-Account-Storage-Policy-Policy-0-Object-Count: 0
         X-Account-Meta-Temp-Url-Key: e1f97840118eafc550d45dbd8e530c11
         X-Account-Bytes-Used: 0
         X-Account-Container-Count: 3
         Content-Type: text/plain; charset=utf-8
         Accept-Ranges: bytes
         X-Trans-Id: tx1353de66dd9d49da84eda-00544799f4ord1
         Date: Wed, 15 June 2015 11:50:12 GMT
                           
         metest
         mytest
         mytest2
         * Connection #0 to host storage101.ord1.clouddrive.com left intact

.. _common-dg-auth-manage:

Manage authentication tokens
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Authentication tokens are valid for 24 hours by default. The expiration
time stamp is included in the token object returned in the
authentication response. Administrators and users can invalidate a token
immediately by submitting a **Revoke token** API request to the Identity
service endpoint.

If you re-authenticate before the ``token`` expires, the Identity
service returns the same token as long as it remains valid.

When a token expires or becomes invalid, any API request submitted
against Rackspace Cloud services returns a 401 error message. To regain
access, submit another **POST tokens** request to the authentication
endpoint.

**Best practices**

-  Cache authentication tokens.

   By default, the Rackspace Cloud Identity service makes an
   authentication request before every API call.

   To speed up your API operations and reduce system load, store the
   authentication token in a secure cache or database so that the
   API can use the stored information, instead of having to
   re-authenticate for each API request. You can re-use the cached
   token value as long as it remains valid.

-  Design applications to re-authenticate after receiving a
   `401 Unauthorized` response from a service endpoint, or use
   either of the following methods to get a new token before the
   existing token expires.

-  Submit a **POST tokens** request within an hour of the token
   expiration to obtain a new token. Note that this behavior is a
   Rackspace customization of the OpenStack Identity (keystone)
   implementation.

-  Submit a **DELETE token** request to revoke the existing
   token, and then followed by a **POST tokens** request to get a new token.

-  To simplify authentication, credential, and token management, use an 
   `OpenStack command-line client application`_ or one of the `Rackspace SDKs`_.

.. note:
    - For more detailed authentication instructions, see the `Identity service quickstart`_.

    - The Rackspace Cloud Identity service supports additional authentication methods like 
      username and password, and multi-factor authentication. For more information, see
      `Rackspace Cloud Identity service Developer Guide`_.

.. _OpenStack command-line client application: https://wiki.openstack.org/wiki/OpenStackClients
.. _Rackspace SDKs: https://developer.rackspace.com/sdks/
.. _Identity service quickstart: http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/QuickStart-000.html
.. _Rackspace Cloud Identity service Developer: http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/Token_Calls.html